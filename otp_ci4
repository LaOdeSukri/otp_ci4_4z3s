1. Struktur Folder Project

ci4-login-otp/
│
├── app/
│   ├── Config/
│   │   └── Otp.php
│   ├── Controllers/
│   │   └── AuthController.php
│   ├── Helpers/
│   │   └── otp_helper.php
│   ├── Models/
│   │   └── Backend/
│   │       └── UsersModel.php
│   ├── Views/
│   │   └── auth/
│   │       └── login.php
│   └── Database/
│       └── migrations/
│
├── public/
│   └── index.php
│
├── writable/
│   └── logs/
│
├── sql/
│   └── users_table.sql
│
├── .gitignore
└── README.md

2. File SQL — sql/users_table.sql

/writable/*
/vendor/*
/.env
/.env.*
/public/uploads/*
.idea
.vscode
.DS_Store

3. File README.md

CREATE TABLE `users` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(100) NOT NULL,
  `nama` VARCHAR(100) DEFAULT NULL,
  `password` VARCHAR(255) DEFAULT NULL,
  `otp_code` VARCHAR(10) DEFAULT NULL,
  `otp_expired` DATETIME DEFAULT NULL,
  `role` ENUM('admin','operator','user') DEFAULT 'user',
  `is_active` TINYINT(1) DEFAULT 1,
  `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


3. Config OTP — app/Config/Otp.php

<?php

namespace App\Config;

use CodeIgniter\Config\BaseConfig;

class Otp extends BaseConfig
{
    public string $mode = 'log'; // 'email' untuk kirim via email, 'log' untuk testing
    public int $expiryMinutes = 5; // OTP valid 5 menit
    public int $resendDelaySeconds = 60; // Batas resend OTP
}

4. Helper — app/Helpers/otp_helper.php

<?php

use App\Config\Otp;

if (!function_exists('generateOtp')) {
    function generateOtp($length = 6)
    {
        return str_pad(random_int(0, pow(10, $length) - 1), $length, '0', STR_PAD_LEFT);
    }
}

if (!function_exists('logOtp')) {
    function logOtp($email, $otp)
    {
        $config = new Otp();
        if ($config->mode === 'log') {
            $logFile = WRITEPATH . 'logs/otp_log.txt';
            $entry = date('Y-m-d H:i:s') . " - {$email} => {$otp}\n";
            file_put_contents($logFile, $entry, FILE_APPEND);
        }
    }
}

5. Model — app/Models/Backend/UsersModel.php

<?php

namespace App\Models\Backend;

use CodeIgniter\Model;

class UsersModel extends Model
{
    protected $table = 'users';
    protected $primaryKey = 'id';
    protected $allowedFields = [
        'email', 'nama', 'password', 'otp_code', 'otp_expired', 'role', 'is_active'
    ];
    protected $useTimestamps = true;
}


6. Controller — app/Controllers/AuthController.php

<?php

namespace App\Controllers;

use App\Controllers\BaseController;
use App\Models\Backend\UsersModel;

class AuthController extends BaseController
{
    protected $users;

    public function __construct()
    {
        $this->users = new UsersModel();
    }

    public function login()
    {
        return view('auth/login');
    }

    public function doLogin()
    {
        $email = $this->request->getPost('email');
        $user = $this->users->where('email', $email)->first();

        if (!$user) {
            return redirect()->back()->with('error', 'Email tidak terdaftar.');
        }

        $otp = generateOtp();
        $expired = date('Y-m-d H:i:s', strtotime('+5 minutes'));

        $this->users->update($user['id'], [
            'otp_code' => $otp,
            'otp_expired' => $expired
        ]);

        logOtp($email, $otp);

        session()->set('otp_email', $email);

        return redirect()->to('/auth/verify');
    }

    public function verify()
    {
        return view('auth/verify_otp');
    }

    public function doVerify()
    {
        $email = session()->get('otp_email');
        $otp = $this->request->getPost('otp');

        $user = $this->users->where('email', $email)->first();

        if (!$user || $user['otp_code'] !== $otp || strtotime($user['otp_expired']) < time()) {
            return redirect()->back()->with('error', 'OTP salah atau kadaluarsa.');
        }

        // Hapus OTP setelah berhasil
        $this->users->update($user['id'], [
            'otp_code' => null,
            'otp_expired' => null
        ]);

        session()->set('isLoggedIn', true);
        session()->set('userData', $user);

        return redirect()->to('/dashboard');
    }

    public function logout()
    {
        session()->destroy();
        return redirect()->to('/auth/login');
    }

    public function dashboard()
    {
        if (!session()->get('isLoggedIn')) {
            return redirect()->to('/auth/login');
        }

        return view('auth/dashboard', ['user' => session()->get('userData')]);
    }
}

7. View — app/Views/auth/login.php

<form action="/auth/doLogin" method="post">
    <input type="email" name="email" placeholder="Masukkan Email" required>
    <button type="submit">Kirim OTP</button>
</form>
<?= session()->getFlashdata('error') ?>


app/Views/auth/verify_otp.php

<form action="/auth/doVerify" method="post">
    <input type="text" name="otp" placeholder="Masukkan OTP" required>
    <button type="submit">Verifikasi</button>
</form>
<?= session()->getFlashdata('error') ?>


app/Views/auth/dashboard.php

<h1>Selamat Datang, <?= esc($user['nama']) ?></h1>
<a href="/auth/logout">Logout</a>







